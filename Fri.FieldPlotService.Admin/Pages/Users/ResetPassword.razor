@inherits BasePage

<BusyIndicator Model="@this" />

@if (IsInitialized)
{
    <MudPaper Class="ma-5 pa-3">
        <EditForm Model="model" OnValidSubmit="SaveAsync">
            <DataAnnotationsValidator />
            <MudStack Row="false">
                <MudTextField Margin="Margin.Dense" InputType="InputType.Password" Variant="Variant.Outlined" @bind-Value="model.Password" For="@(() => model.Password)" Label="@Localizer["General_Password"]" Required="true" />
                <MudTextField Margin="Margin.Dense" InputType="InputType.Password" Variant="Variant.Outlined" @bind-Value="model.ConfirmPassword" For="@(() => model.ConfirmPassword)" Label="@Localizer["General_ConfirmPassword"]" Required="true" />
            </MudStack>
            <MudStack Row="true" AlignItems="AlignItems.Start" Class="ma-6">
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined">@Localizer["General_ResetPassword"]</MudButton>
            </MudStack>
        </EditForm>
    </MudPaper>
}


@code {

    [CascadingParameter] 
    MudDialogInstance? MudDialog { get; set; }

    [Parameter]
    public Guid UserId { get; set; }

    [Parameter]
    public string? Username { get; set; }

    /// <summary>
    /// Model used for the page.
    /// </summary>
    PasswordFormModel model = new();

    /// <summary>
    /// Initializes the page.
    /// </summary>
    /// <returns></returns>
    protected async override Task OnInitializedAsync()
    {
        try
        {
            await base.OnInitializedAsync();

            IsInitialized = true;
            IsBusy = false;
        }
        catch (Exception ex)
        {
            ShowError(ex);
        }

    }

    /// <summary>
    /// Saves the user information.
    /// </summary>
    /// <returns></returns>
    async Task SaveAsync()
    {
        try
        {
            IsBusy = true;

            await AdminContext.Client.ResetVendorUserPasswordAsync(UserId, model.Password);

            IsBusy = false;

            // Add snackbar item.
            Snackbar.Add(Localizer["General_PasswordReset"], Severity.Normal);

            MudDialog?.Close();
        }
        catch (Exception ex)
        {
            ShowError(ex);
        }
    }

    /// <summary>
    /// Model class for this page.
    /// </summary>
    class PasswordFormModel
    {
        [Required]
        public string? Password { get; set; }
        [Required]
        [Compare("Password")]
        public string? ConfirmPassword { get; set; }
    }
}
